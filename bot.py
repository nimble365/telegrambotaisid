import telebot
from telebot.types import InlineKeyboardMarkup, InlineKeyboardButton, CallbackQuery, InputFile

TOKEN = "8069908154:AAHZUeNvEwxVaVLFa4zwn6TocRa7i0cySfo"
bot = telebot.TeleBot(TOKEN, parse_mode="HTML")

def main_menu():
    keyboard = InlineKeyboardMarkup()
    keyboard.row(InlineKeyboardButton("–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∏", callback_data="developers"))
    keyboard.row(InlineKeyboardButton("–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è", callback_data="docs"))
    keyboard.row(InlineKeyboardButton("–ü—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—è –ø—Ä–æ–µ–∫—Ç–∞", callback_data="presentation"))
    return keyboard

@bot.message_handler(commands=['start'])
def start_command(message):
    bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=main_menu())

@bot.callback_query_handler(func=lambda call: call.data == "developers")
def send_developers(call: CallbackQuery):
    developers = "üë®‚Äçüíª –ü—Ä–æ–µ–∫—Ç —Ä–∞–∑—Ä–∞–±–∞—Ç—ã–≤–∞–ª–∏:\n1. <b>–ê–π—Ç–±–∞–µ–≤ –ñ–µ“£—ñ—Å –ñ“±–º–∞–±–∞–π“±–ª—ã</b>\n2. <b>–°—É–Ω–¥–µ—Ç –°—É–º–∞—è –ë–∞–π–∂–∞–Ω“õ—ã–∑—ã</b>"
    keyboard = InlineKeyboardMarkup().row(InlineKeyboardButton("üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back"))
    bot.edit_message_text(developers, call.message.chat.id, call.message.message_id, reply_markup=keyboard)

@bot.callback_query_handler(func=lambda call: call.data == "docs")
def send_docs_menu(call: CallbackQuery):
    doc_link = "https://github.com/nimble365/aisid2025_bot/blob/main/tech_doc.md"
    keyboard = InlineKeyboardMarkup()
    keyboard.row(InlineKeyboardButton("üåê –û—Ç–∫—Ä—ã—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é", url=doc_link))
    keyboard.row(InlineKeyboardButton("üìÑ –°–∫–∞—á–∞—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é", callback_data="download_docs"))
    keyboard.row(InlineKeyboardButton("üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back"))
    bot.edit_message_text("üìë –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", call.message.chat.id, call.message.message_id, reply_markup=keyboard)

@bot.callback_query_handler(func=lambda call: call.data == "download_docs")
def send_docs_file(call: CallbackQuery):
    bot.send_document(call.message.chat.id, InputFile("tech_doc.md"), caption="üìÑ –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è")
    bot.send_message(call.message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=main_menu())

@bot.callback_query_handler(func=lambda call: call.data == "presentation")
def send_presentation_menu(call: CallbackQuery):
    presentation_link = "https://github.com/nimble365/aisid2025_bot/blob/main/aisid2025_presentation.pdf"
    keyboard = InlineKeyboardMarkup()
    keyboard.row(InlineKeyboardButton("üåê –û—Ç–∫—Ä—ã—Ç—å –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—é", url=presentation_link))
    keyboard.row(InlineKeyboardButton("üì• –°–∫–∞—á–∞—Ç—å –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—é", callback_data="download_presentation"))
    keyboard.row(InlineKeyboardButton("üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back"))
    bot.edit_message_text("üéû –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", call.message.chat.id, call.message.message_id, reply_markup=keyboard)

@bot.callback_query_handler(func=lambda call: call.data == "download_presentation")
def send_presentation_file(call: CallbackQuery):
    bot.send_document(call.message.chat.id, InputFile("aisid2025_presentation.pdf"), caption="üì• –ü—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—è –ø—Ä–æ–µ–∫—Ç–∞")
    bot.send_message(call.message.chat.id, "üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:", reply_markup=main_menu())

@bot.callback_query_handler(func=lambda call: call.data == "back")
def go_back(call: CallbackQuery):
    bot.edit_message_text("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", call.message.chat.id, call.message.message_id, reply_markup=main_menu())

if __name__ == "__main__":
    bot.polling(none_stop=True)